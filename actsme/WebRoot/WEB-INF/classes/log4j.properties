# 日志记录器（Logger）的行为是分等级的。具体分为：OFF、 FATAL、ERROR、WARN、INFO、DEBUG、TRACE、ALL
# 将等级为DEBUG的日志信息输出到后面指定的目的地
log4j.rootLogger=DEBUG,CONSOLE,A1,ROLLING_FILE
#DEBUG,CONSOLE,FILE,ROLLING_FILE,MAIL,DATABASE

log4j.addivity.org.apache=true

###################
# Console Appender 输出日志到控制台
###################
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=[xiaojl] %d{yyyy-MM-dd HH:mm:ss} [%p]-[%t]-[%l] %m%n
#log4j.appender.CONSOLE.layout.ConversionPattern=[start]%d{DATE}[DATE]%n%p[PRIORITY]%n%x[NDC]%n%t[THREAD] n%c[CATEGORY]%n%m[MESSAGE]%n%n


########################
# Daily Rolling File Appender每天产生一个日志文件
#######################
log4j.appender.A1=org.apache.log4j.DailyRollingFileAppender
log4j.appender.A1.Threshold=INFO
log4j.appender.A1.Append=true
log4j.appender.A1.File=${catalina.home}/logs/xiaojl.log
log4j.appender.A1.DatePattern=yyyy-MM-dd'.log'
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=[xiaojl] %d{yyyy-MM-dd HH:mm:ss} [%p]-[%t]-[%l] %m%n


########################
# Rolling File文件大小到达指定尺寸的时候产生一个新的文件
########################
log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender
log4j.appender.ROLLING_FILE.Threshold=ERROR
log4j.appender.ROLLING_FILE.File=${catalina.home}/logs/xiaojl_r.log
# 到指定大小后是否转存日志到备份日志文件
log4j.appender.ROLLING_FILE.Append=true
log4j.appender.ROLLING_FILE.MaxFileSize=1024KB
log4j.appender.ROLLING_FILE.MaxBackupIndex=50
log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.ROLLING_FILE.layout.ConversionPattern=[xiaojl] %d{yyyy-MM-dd HH:mm:ss} [%p]-[%c] %x %L - %m%n

#####################
# File Appender 产生一个日志文件
#####################
log4j.appender.FILE=org.apache.log4j.FileAppender
log4j.appender.FILE.File=${catalina.home}/logs/xiaojl.log
# 到指定大小后是否继续记录日志，false清空再记录
log4j.appender.FILE.Append=false
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=[xiaojl] %d - %c -%-4r [%t] %-5p %c %x - %m%n
# Use this layout for LogFactor 5 analysis

########################
# JDBC Appender 保存到数据中
#######################
#log4j.appender.DATABASE=org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.DATABASE.Threshold=ERROR
#log4j.appender.DATABASE.URL=jdbc:mysql://localhost:3306/iac
#log4j.appender.DATABASE.driver=com.mysql.jdbc.Driver
#log4j.appender.DATABASE.user=admin
#log4j.appender.DATABASE.password=liming
#log4j.appender.DATABASE.sql=INSERT INTO log4j (logDate, logThread, logLevel, logClass, logMsg, logException) VALUES ('%d{yyyy-MM-dd HH:mm:ss}', '%t', '%p', '%l', '%m', '')
#log4j.appender.DATABASE.layout=org.apache.log4j.PatternLayout
#log4j.appender.DATABASE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n